---
import ContentTags from "../components/ContentTags.astro";
import IndexPageLayout from "./IndexPageLayout.astro";

const { frontmatter, Content } = Astro.props;
const {
  title,
  description,
  image,
  postDate,
  course,
  cuisine,
  yields,
  duration,
  tags,
  ingredients,
  preparation,
  steps,
  canonical
} = frontmatter;

// Handle different possible formats for preparation steps
const prepSteps = preparation || steps || [];
---

<IndexPageLayout title={title} description={description} image={image} subTitle={title} canonicalURL={canonical}>
  <div class="w-full justify-center flex flex-col">
    {tags &&
      <div class="pb-4 mx-auto">
        <ContentTags tags={tags}/>
      </div>}

    <!-- Recipe metadata -->
    <div class="flex flex-wrap gap-4 justify-center mb-6 text-sm">
      {course && <div><span class="font-semibold">Course:</span> {course}</div>}
      {cuisine && <div><span class="font-semibold">Cuisine:</span> {cuisine}</div>}
      {yields && <div><span class="font-semibold">Yields:</span> {yields}</div>}
      {duration && <div><span class="font-semibold">Time:</span> {duration}</div>}
    </div>

    <!-- Content area (images, description, etc.) -->
    <div class="prose mx-auto dark:prose-invert mb-8">
      <Content />
    </div>

    <!-- Two-column layout for ingredients and preparation -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3 mb-6">
      <!-- Left column: Ingredients -->
      <div class="border border-border p-4 rounded-lg shadow-sm">
        <h2 class="text-xl font-bold mb-4">Ingredients</h2>
        {ingredients && Array.isArray(ingredients) ? (
          <ul class="list-disc pl-5 space-y-2">
            {ingredients.map((ingredient) => (
              <li>{ingredient}</li>
            ))}
          </ul>
        ) : (
          <p>No ingredients listed</p>
        )}
      </div>

      <!-- Right column: Preparation -->
      <div class="border border-border p-4 rounded-lg shadow-sm">
        <h2 class="text-xl font-bold mb-4">Preparation</h2>
        {(() => {
          // Handle preparation data in different formats
          if (Array.isArray(prepSteps) && prepSteps.length > 0) {
            return (
              <ol class="list-decimal pl-5 space-y-3">
                {prepSteps.map((step) => <li>{step}</li>)}
              </ol>
            );
          } else if (typeof preparation === 'string' && preparation.trim()) {
            // If it's a single string, split by newlines or periods to create steps
            const steps = preparation.split(/\.\s+|\n+/).filter(s => s.trim());
            if (steps.length > 0) {
              return (
                <ol class="list-decimal pl-5 space-y-3">
                  {steps.map((step) => <li>{step}</li>)}
                </ol>
              );
            }
          }
          // Fall back to no steps
          return <p>No preparation steps listed</p>;
        })()}
      </div>
    </div>
  </div>
</IndexPageLayout>
